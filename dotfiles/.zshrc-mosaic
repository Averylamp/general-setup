

alias m="mctl"
alias mo="cd ~/mosaic"
alias mc="cd ~/mosaic/mctl"
alias b="mctl"
alias kdelinteractive="kubectl delete jobs -l type=interactive"
alias kdeljobs="kubectl delete jobs --all"
alias kdeljobsall="benchctl delete jobs -l type=interactive"
alias kgj="kubectl get jobs"
alias kdj="kubectl describe job"
alias python="/usr/bin/python3"
alias kgc="kubectl config get-contexts"
alias kscc="kubectl config use-context colo-research-01"
alias ksca="kubectl config use-context aws-research-01"
alias kscaz="kubectl config use-context azure-research-01"
alias kscg="kubectl config use-context gcp-research-01"
alias mutil="mctl util -v"
alias klf="kubectl logs -f "
alias check_failed="kubectl get jobs | grep 0/1 | awk '{ print $1; }' | xargs -I {} kubectl describe job {} | grep -E  '1 Failed'"

run_on_all_contexts(){
    echo "Running '$@' on all contexts"
    current=$(kubectl config current-context)
    kscc
    eval $@
    ksca
    eval $@
    kscaz
    eval $@
    kscg
    eval $@
    kcuc $current
}

kgaj(){
    run_on_all_contexts kgj
}


kdevaws(){
	instance=${1:-g4dn.2xlarge}
    kcuc aws-research-01
    existing=$(kgj -o name | grep "avery-aws-$instance-interactive" | head -n 1 )
    if [ $? -eq 0 ]; then
        echo -e "Existing interactive pod found\n"
        kubectl exec -it $(echo $existing | head -n 1) -- zsh
    else
        echo -e "No existing interactive pod found\nCreating pod...\n"
        echo -e "benchmark interactive --instance $instance --image mosaicml/avery --name avery-aws-$instance-interactive"
        out=$(benchmark interactive --instance $instance --image mosaicml/avery --name avery-aws-$instance-interactive)
        echo $out
        out=$(echo $out | grep -A 2 "Pod launched" |  sed -n 2p | sed s/bash/zsh/)
        echo $out
        eval $out
    fi

}

kdevaws8() {
	kdevaws p3.16xlarge
}

kdevcolo(){
	accelerator=$1
	acc_type=$2
	echo "Accelerator: $gpu"
    kcuc colo-research-01

	job_name="avery-interactive-$accelerator$acc_type"
	if [ ! -n "$accelerator" ]
	then
		job_name="avery-interacitve-cpu"	
	fi
	echo "Job: $job_name"
    existing=$(kgj -o name | grep "$job_name")
    if [ $? -eq 0 ]; then
        echo -e "Existing interactive pod found\n"
        kubectl exec -it $(echo $existing | head -n 1) -- zsh
    else
        echo -e "No existing interactive pod found\nCreating pod...\n"
        echo -e "Running: benchmark interactive --instance cota-$accelerator$acc_type --image mosaicml/avery --name $job_name"
        out=$(benchmark interactive --instance cota-$accelerator$acc_type --image mosaicml/avery --name "$job_name")
        echo $out
        out=$(echo $out | grep -A 2 "Pod launched" |  sed -n 2p | sed s/bash/zsh/)
        echo $out
        eval $out
    fi
}

kdevc(){
	cpus=${1:-10}
	kdevcolo "" "c$cpus"
}
kdev(){
	gpu=${1:-3080}
	gpu_num=${2:-1}
	kdevcolo "g$gpu_num-" "$gpu"
}

aws_clean(){
    kubectl get jobs | grep 1/1 | awk '{ print $1; }' > jobs;
    kubectl get jobs | grep 1/1 | awk '{ print $1; }'  | xargs -I {} kubectl describe job {} | grep -A 3 ebs-pvc | grep -E 'ClaimName:' | awk '{print $2;}' > pvcs;
    echo Deleting jobs;
    cat jobs | parallel --bar kubectl delete job {};
    echo Deleting pvcs;
    cat pvcs | parallel --bar kubectl delete pvc {};
    rm jobs pvcs
}

alias audioout="pacmd set-default-sink 'alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sink'"
alias audiodac="pacmd set-default-sink 'alsa_output.usb-OPPO_OPPO_HA-2_USB_AUDIO_2.0_DAC-00.analog-stereo'"
alias connectbose="bluetoothctl connect 4C:87:5D:A3:AC:5B"
alias performance="echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor"
alias powersave="echo powersave | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor"
alias pyr="pyright ."
alias next="npx next"
alias nd="npm run dev"
alias nbs="npm run build && npm run start"
alias vercel="npx vercel"


alias worksetup="/home/avery/.xprofile-work"
alias werk="worksetup"
alias work="worksetup"
alias homesetup="/home/avery/.xprofile-home"
alias mob="/home/avery/.xprofile-mobile"
alias srcv="source venv/bin/activate"


xset r rate 600 35